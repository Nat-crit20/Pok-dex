let pokemonRepository = (function () {
  let e = [],
    t = "https://pokeapi.co/api/v2/pokemon/";
  function n() {
    return e;
  }
  function o(e) {
    p(`Loading ${e.name} data now...`);
    let t = e.detailUrl;
    return fetch(t)
      .then((e) => (setTimeout(() => s(), 500), e.json()))
      .then((t) => {
        (e.imageUrl = t.sprites.front_default),
          (e.height = t.height),
          (e.type = []),
          t.types.forEach((t) => {
            e.type.push(t.type.name);
          }),
          (e.weight = t.weight);
      })
      .catch((e) => {
        console.log(e);
      });
  }
  function a(t) {
    if ("object" != typeof t) return;
    let n = ["name", "detailUrl"],
      o = Object.keys(t),
      a = !0;
    for (let i = 0; i < n.length; i++) o.includes(n[i]) || (a = !1);
    a && e.push(t);
  }
  let i = async function (e) {
      let n = {},
        o = fetch(`${t}${e.toLowerCase()}`);
      await o
        .then((e) => e.json())
        .then((e) => {
          p(`Loading ${e.name} data now...`),
            (n.name = e.name),
            (n.imageUrl = e.sprites.front_default),
            (n.height = e.height),
            (n.type = []),
            e.types.forEach((e) => {
              n.type.push(e.type.name);
            }),
            (n.weight = e.weight);
        })
        .catch((e) => {
          console.error(e);
        }),
        setTimeout(() => s(), 500),
        n.name && l(n);
    },
    r = async function (e) {
      return (
        await o(e).catch((e) => {
          console.log(e);
        }),
        l(e)
      );
    };
  function l(e) {
    let t = $(".modal-body"),
      n = $(".modal-title");
    t.empty(), n.empty();
    let o = $("<h1>" + e.name + "</h1>"),
      a = $("<p>Height: " + e.height + "</p>"),
      i = $("<p>Weight: " + e.weight + "</p>"),
      r = $("<img>"),
      l = $("<p> Types: " + e.type + "</p>");
    r.attr("src", e.imageUrl),
      n.append(o),
      t.append(r),
      t.append(a),
      t.append(i),
      t.append(l);
  }
  function p(e) {
    let t = document.querySelector(".container"),
      n = document.createElement("p");
    (n.innerText = e), t.appendChild(n);
  }
  function s() {
    let e = document.querySelector("p");
    e.parentElement.removeChild(e);
  }
  return {
    getAll: n,
    add: a,
    find: i,
    addListItem: function e(t) {
      let n = document.querySelector(".pokemon-list"),
        o = document.createElement("li"),
        a = document.createElement("button");
      o.classList.add("list-group-item"),
        a.setAttribute("type", "button"),
        a.classList.add("pokemon-button"),
        a.classList.add("btn"),
        a.classList.add("btn-primary"),
        a.setAttribute("data-toggle", "modal"),
        a.setAttribute("data-target", "#pokemonModal"),
        (a.innerText = t.name),
        o.appendChild(a),
        n.appendChild(o),
        (function e(t, n) {
          t.addEventListener("click", n);
        })(a, () => r(t));
    },
    showDetails: r,
    loadList: function e() {
      p("Loading your pokemon now....");
      let n = fetch(`${t}?limit=905`),
        o = n
          .then((e) => (setTimeout(() => s(), 500), e.json()))
          .then((e) => {
            e.results.forEach((e) => {
              let t = { name: e.name, detailUrl: e.url };
              a(t);
            });
          })
          .catch((e) => {
            console.log(e);
          });
      return o;
    },
    loadDetails: o,
    searchFunc: function e() {
      let t = document.querySelector("form"),
        n = document.querySelector("input[type=search]");
      t.addEventListener("submit", (e) => {
        e.preventDefault(), i(n.value);
      });
    },
  };
})();
pokemonRepository
  .loadList()
  .then(() => {
    pokemonRepository.getAll().forEach((e) => {
      pokemonRepository.addListItem(e);
    }),
      pokemonRepository.searchFunc();
  })
  .catch((e) => {
    console.log(e);
  });
